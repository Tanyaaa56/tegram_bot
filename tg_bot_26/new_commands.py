from aiogram import Bot, Dispatcher, types, F
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
import asyncio
from secret import BOT_TOKEN

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

@dp.message(F.text == "/phone")
async def request_phone(message: types.Message):
    keyboard = ReplyKeyboardMarkup(
        keyboard=[[KeyboardButton(text="üìû –ù–∞–¥—ñ—Å–ª–∞—Ç–∏ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É", request_contact=True)]],
        resize_keyboard=True,
        one_time_keyboard=True
    )
    await message.answer("–ë—É–¥—å –ª–∞—Å–∫–∞, –Ω–∞–¥—ñ—à–ª—ñ—Ç—å —Å–≤—ñ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É:", reply_markup=keyboard)

@dp.message(F.contact)
async def handle_phone(message: types.Message):
    phone_number = message.contact.phone_number
    await message.answer(f"–î—è–∫—É—é! –í–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É: {phone_number}")

@dp.message(F.text == "/location")
async def request_location(message: types.Message):
    keyboard = ReplyKeyboardMarkup(
        keyboard=[[KeyboardButton(text="üìç –ù–∞–¥—ñ—Å–ª–∞—Ç–∏ –≥–µ–æ–ª–æ–∫–∞—Ü—ñ—é", request_location=True)]],
        resize_keyboard=True,
        one_time_keyboard=True
    )
    await message.answer("–ë—É–¥—å –ª–∞—Å–∫–∞, –Ω–∞–¥—ñ—à–ª—ñ—Ç—å —Å–≤–æ—é –≥–µ–æ–ª–æ–∫–∞—Ü—ñ—é:", reply_markup=keyboard)

@dp.message(F.location)
async def handle_location(message: types.Message):
    latitude = message.location.latitude
    longitude = message.location.longitude
    await message.answer(f"–î—è–∫—É—é! –í–∞—à–∞ –≥–µ–æ–ª–æ–∫–∞—Ü—ñ—è:\n–®–∏—Ä–æ—Ç–∞: {latitude}\n–î–æ–≤–≥–æ—Ç–∞: {longitude}")

@dp.message(F.text == "/photo")
async def send_photo(message: types.Message):
    photo_url = "https://example.com/image.jpg"  # –ó–∞–º—ñ–Ω—ñ—Ç—å –Ω–∞ —Å–≤–æ—î –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è
    await message.answer_photo(photo=photo_url, caption="–û—Å—å –≤–∞—à–µ —Ñ–æ—Ç–æ! üì∏")

@dp.message(F.text == "/video")
async def send_video(message: types.Message):
    video_url = "https://www.youtube.com/watch?v=kqtD5dpn9C8&ab_channel=ProgrammingwithMosh"  # –ó–∞–º—ñ–Ω—ñ—Ç—å –Ω–∞ —Å–≤–æ—î –≤—ñ–¥–µ–æ
    await message.answer_video(video=video_url, caption="–û—Å—å –≤–∞—à–µ –≤—ñ–¥–µ–æ! üé•")

@dp.message(F.text == "/gif")
async def send_gif(message: types.Message):
    gif_url = "https://no-cdn.shortpixel.ai/client/to_avif,q_lossy,ret_wait/https://shortpixel.com/blog/wp-content/uploads/2023/12/nyan-cat.gif"  # –ó–∞–º—ñ–Ω—ñ—Ç—å –Ω–∞ —Å–≤—ñ–π GIF
    await message.answer_animation(animation=gif_url, caption="–û—Å—å –≤–∞—à GIF! üéûÔ∏è")

@dp.message(F.text == "/document")
async def send_document(message: types.Message):
    doc_url = "https://example.com/file.pdf"  # –ó–∞–º—ñ–Ω—ñ—Ç—å –Ω–∞ —Å–≤—ñ–π —Ñ–∞–π–ª
    await message.answer_document(document=doc_url, caption="–û—Å—å –≤–∞—à –¥–æ–∫—É–º–µ–Ω—Ç üìÑ")

@dp.message(F.text == "/voice")
async def send_voice(message: types.Message):
    voice_url = "https://example.com/audio.ogg"  # –ó–∞–º—ñ–Ω—ñ—Ç—å –Ω–∞ —Å–≤—ñ–π –≥–æ–ª–æ—Å–æ–≤–∏–π —Ñ–∞–π–ª
    await message.answer_voice(voice=voice_url, caption="–û—Å—å –≤–∞—à–µ –≥–æ–ª–æ—Å–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è üéôÔ∏è")

@dp.message(F.text == "/audio")
async def send_audio(message: types.Message):
    audio_url = "https://example.com/audio.mp3"  # –ó–∞–º—ñ–Ω—ñ—Ç—å –Ω–∞ —Å–≤—ñ–π —Ñ–∞–π–ª
    await message.answer_audio(audio=audio_url, caption="–û—Å—å –≤–∞—à–∞ –∞—É–¥—ñ–æ–∑–∞–ø–∏—Å üéµ")

@dp.message(F.text == "/sticker")
async def send_sticker(message: types.Message):
    sticker_id = "CAACAgIAAxkBAAEFgV1lKmj..."  # –ó–∞–º—ñ–Ω—ñ—Ç—å –Ω–∞ ID —Å—Ç—ñ–∫–µ—Ä–∞
    await message.answer_sticker(sticker=sticker_id)

@dp.message(F.text == "/poll")
async def send_poll(message: types.Message):
    await message.answer_poll(
        question="–©–æ –≤–∞–º –±—ñ–ª—å—à–µ –ø–æ–¥–æ–±–∞—î—Ç—å—Å—è?",
        options=["–ß–∞–π", "–ö–∞–≤–∞", "–°—ñ–∫"],
        is_anonymous=False  # –û–ø–∏—Ç—É–≤–∞–Ω–Ω—è –Ω–µ –∞–Ω–æ–Ω—ñ–º–Ω–µ
    )


async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
